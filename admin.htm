<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>PortoneNet</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">

    <link rel="stylesheet" href="olliout.css">
    <link rel="stylesheet" href="loader.css">
</head>

<body style="background-color: CORAL;">
    <div class="container">
        <div class="inner-container">
            <br>
            <!-- Welcome card -->
            <div class="card text-center">
                <div class="card-body bg-transparent">
                    <h4 class="card-title">Amministrazione</h4>
                    <p class="card-text">Serve una Master Password per poter fare modifiche</p>
                    <p id="rtc"></p>
                    <a href="/index.htm" class="mt-2 btn btn-info" title="Magari funziona">Pagina Login</a>
                </div>
            </div>

            <br>

            <!-- Action selection-->
            <fieldset class="form-group">
                <div class="row">
                    <legend class="col-form-legend col-sm-2"><b>Sistema</b></legend>
                    <div class="btn-group col-sm-10" data-toggle="buttons">
                        <label class="btn btn-secondary">
                            <input type="radio" name="a" id="r1" autocomplete="off">Blocca</label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="a" id="r2" autocomplete="off">Svuota</label>
                        <label class="btn btn-secondary active">
                            <input type="radio" name="a" id="r3" autocomplete="off">Nuovo</label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="a" id="r4" autocomplete="off">Test</label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="a" id="r5" autocomplete="off">Keys</label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="a" id="r6" autocomplete="off">Log</label>
                    </div>
                </div>
            </fieldset>

            <!-- Password time validity -->
            <fieldset class="form-group" id="timeval">
                <div class="row">
                    <legend class="col-form-legend col-sm-2"><b>Validità</b></legend>
                    <div class="btn-group col-sm-10" data-toggle="buttons">
                        <label class="btn btn-secondary active">
                            <input type="radio" name="v" id="v1" value="21600" autocomplete="off">6 Ore</label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="v" id="v2" value="259200" autocomplete="off">3 Giorni</label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="v" id="v3" value="2592000" autocomplete="off">30 Giorni</label>
                        <label class="btn btn-secondary">
                            <input type="radio" name="v" id="v4" value="31536000" autocomplete="off">1 Anno</label>
                    </div>
                </div>
            </fieldset>

            <form id="access" method="post">
                <!-- Text inputs -->
                <div class="form-group row">
                    <!-- Administrator inputs -->
                    <label for="key" class="col-sm-2 col-form-label adminpassword">
                        <b>Master Password</b>
                    </label>
                    <div class="mt-2 col-sm-10 adminpassword">
                        <input type="password" class="form-control passwd" name="ak" id="key" placeholder="Chiave Admin" title="Mi raccomando">
                    </div>

                    <!-- User inputs -->
                    <label for="userkey" class="mt-2 col-sm-2 col-form-label userpassword">
                        <b>Password</b>
                    </label>
                    <div class="mt-2 col-sm-10 userpassword">
                        <input type="password" class="form-control passwd" name="k" id="userkey" placeholder="Chiave Utente" title="Mi raccomando">
                    </div>


                    <!-- Confirm button -->
                    <div class="mt-2 col-sm-12 text-center">
                        <button type="button" class="btn btn-success btn-lg btn-block" title="Daje" id="submit">Agisci</button>
                    </div>
                </div>
            </form>

            <ul class="list-group" id="list" type="hidden"></ul>
        </div>
    </div>

    <!-- Modal correctly completed -->
    <div class="modal fade" id="completed" tabindex="-1" role="dialog" aria-labelledby="thanksLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="thanksLabel">Ottimo!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Le modifiche sono state attuate!
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-dismiss="modal">Fai dell'altro</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal locked -->
    <div class="modal fade" id="locked" tabindex="-1" role="dialog" aria-labelledby="thanksLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="thanksLabel">Sistema bloccato!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Dovrai sbloccarlo dinuovo perché qualcuno possa entrare
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" data-dismiss="modal">Bene</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal forbidden -->
    <div class="modal fade" id="forbidden" tabindex="-1" role="dialog" aria-labelledby="thanksLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="thanksLabel">Ahia!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Hai sbagliato a scrivere qualcosa, almeno spero
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Riprova</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal tooMany -->
    <div class="modal fade" id="tooMany" tabindex="-1" role="dialog" aria-labelledby="thanksLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="thanksLabel">Malissimo!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Le credenziali sono state sbagliate troppe volte, devi aspettare un po' di tempo prima di riprovare
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Aspetterò</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal generic -->
    <div class="modal fade" id="default" tabindex="-1" role="dialog" aria-labelledby="thanksLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="thanksLabel">Boh?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Qualcosa è andato storto ma non saprei cosa
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Vabbuò</button>
                </div>
            </div>
        </div>
    </div>

    <div id="loader"></div>

    <!-- <script src="admin.js"></script> -->
    <script>
        res = [];
        $(function() {
            // Without these two lines any options has the property checked to true
            $('#r3')[0].checked = true;
            $('#v1')[0].checked = true;
            res = "add";
            // Modifing the visibility of the UI
            // elements depending on the desired action
            $('#r1').on('change', function() {
                $('.adminpassword').show();
                $('.userpassword').hide();
                $('#timeval').hide();
                $('#list').hide();
                res = "lock";
            });
            $('#r2').on('change', function() {
                $('.adminpassword').show();
                $('.userpassword').hide();
                $('#timeval').hide();
                $('#list').hide();
                res = "revokeAll";
            });
            $('#r3').on('change', function() {
                $('.adminpassword').show();
                $('.userpassword').show();
                $('#timeval').show();
                $('#list').hide();
                res = "add";
            });
            $('#r4').on('change', function() {
                $('.adminpassword').hide();
                $('.userpassword').show();
                $('#timeval').hide();
                $('#list').hide();
                res = "check";
            });
            $('#r5').on('change', function() {
                $('.adminpassword').show();
                $('.userpassword').hide();
                $('#timeval').hide();
                $('#list').show();
                res = "active";
            });
            $('#r6').on('change', function() {
                $('.adminpassword').show();
                $('.userpassword').hide();
                $('#timeval').hide();
                $('#list').show();
                res = "posts";
            });

            $('.passwd').keydown(function(event) {
                var keyCode = (event.keyCode ? event.keyCode : event.which);
                if (keyCode == 13) {
                    $('#submit').trigger('click');
                }
            });

            $('#access').submit(function(e) {
                e.preventDefault();
            });

            //handle = null;
            $('#submit').click(function() {
                d = $('#access').find('input:visible').serialize();
                if ($('#r3')[0].checked)
                    d += '@' + (Math.floor(Date.now() / 1000) + parseInt($("input[name=v]:checked").val()));

                $.ajax({ // Send request
                    url: res,
                    method: "POST",
                    dataType: "text",
                    data: d,
                    timeout: 10000,
                    success: function(result) {
                        //console.log(result);
                        if (result.length > 0) { // Fill list
                            $('#list').empty()

                            if ($('#r5')[0].checked) {
                                var entries = result.split('\n');
                                entries.forEach(e => {
                                    if (e.length > 1) { // Double \n entries                                    
                                        var at = e.indexOf('@');
                                        var key = e.substr(2, at - 2);
                                        var d = new Date(e.substr(at + 1) * 1000);
                                        var date = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes()
                                        $('#list').append(`<li class="list-group-item d-flex justify-content-between align-items-center">
                                                        ${key}
                                                        <span class="badge badge-primary badge-pill">${date}</span>
                                                        </li>`);
                                    }
                                });
                            } else if ($('#r6')[0].checked) {
                                //console.log(result)
                                posts = CSVToArray(result, '\t');

                                for (let i = posts.length - 30; i < posts.length - 1; i++) {
                                    let d = new Date(posts[i][0] * 1000);
                                    var date = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes()

                                    $('#list').append(`<li class="list-group-item d-flex justify-content-between align-items-center">
                                                        ${posts[i][1] + ' ' + posts[i][2]}
                                                        <span class="badge badge-primary badge-pill">${date}</span>
                                                        </li>`);
                                }
                            }
                            $('#list').show();

                        } else {
                            $('#completed').modal();
                        }
                        $('#loader').hide();
                    },
                    error: function(result) {
                        $('#loader').hide();

                        switch (result.status) {
                            case 423:
                                $('#locked').modal();
                                break;
                            case 403:
                                $('#forbidden').modal();
                                break;
                            case 429:
                                $('#tooMany').modal();
                                break;
                            default:
                                $('#default').modal();
                                break;
                        }
                    }
                });
                //alert("Sent");                
                $('#loader').show();
            });

            // Getting RTC from system
            $.ajax({
                url: "epoch",
                method: "GET",
                dataType: "text",
                timeout: 10000,
                success: function(result) {
                    date = new Date(result * 1000);
                    $('#rtc').text("Ora del sistema: " + date.toLocaleTimeString() + " " + date.toDateString());
                }
            });
        })

        function CSVToArray(strData, strDelimiter) {
            // Check to see if the delimiter is defined. If not,
            // then default to comma.
            strDelimiter = (strDelimiter || ",");

            // Create a regular expression to parse the CSV values.
            var objPattern = new RegExp(
                (
                    // Delimiters.
                    "(\\" + strDelimiter + "|\\r?\\n|\\r|^)" +

                    // Quoted fields.
                    "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +

                    // Standard fields.
                    "([^\"\\" + strDelimiter + "\\r\\n]*))"
                ),
                "gi"
            );


            // Create an array to hold our data. Give the array
            // a default empty first row.
            var arrData = [
                []
            ];

            // Create an array to hold our individual pattern
            // matching groups.
            var arrMatches = null;


            // Keep looping over the regular expression matches
            // until we can no longer find a match.
            while (arrMatches = objPattern.exec(strData)) {

                // Get the delimiter that was found.
                var strMatchedDelimiter = arrMatches[1];

                // Check to see if the given delimiter has a length
                // (is not the start of string) and if it matches
                // field delimiter. If id does not, then we know
                // that this delimiter is a row delimiter.
                if (
                    strMatchedDelimiter.length &&
                    strMatchedDelimiter !== strDelimiter
                ) {

                    // Since we have reached a new row of data,
                    // add an empty row to our data array.
                    arrData.push([]);

                }

                var strMatchedValue;

                // Now that we have our delimiter out of the way,
                // let's check to see which kind of value we
                // captured (quoted or unquoted).
                if (arrMatches[2]) {

                    // We found a quoted value. When we capture
                    // this value, unescape any double quotes.
                    strMatchedValue = arrMatches[2].replace(
                        new RegExp("\"\"", "g"),
                        "\""
                    );

                } else {

                    // We found a non-quoted value.
                    strMatchedValue = arrMatches[3];

                }


                // Now that we have our value string, let's add
                // it to the data array.
                arrData[arrData.length - 1].push(strMatchedValue);
            }

            // Return the parsed data.
            return (arrData);
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
</body>

</html>